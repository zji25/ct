.PHONY: default base base_no_miri base_no_miri_no_clippy lint test ok all

default: all

base: lint test allowlist

base_miri_unsafe: lint_unsafe test test_miri allowlist

base_miri_unsafe_no_std: lint_unsafe_no_std test test_miri allowlist

base_no_miri: lint test allowlist

base_no_miri_no_parallel: lint test_no_parallel allowlist

base_no_miri_no_clippy: lint_no_clippy test allowlist

lint_unsafe:
	cargo clippy
	@if [ "$$(cargo clippy 2>&1 | grep -v Finished | grep -v Checking | grep -v Blocking)" ]; \
		then echo "ERROR: 'cargo clippy' found some issues (see above)"; exit 1; \
	fi

	cargo fmt -- --check

lint_unsafe_no_std:
	cargo clippy
	@if [ "$$(cargo clippy 2>&1 | grep -v Finished | grep -v Checking | grep -v Blocking)" ]; \
		then echo "ERROR: 'cargo clippy' found some issues (see above)"; exit 1; \
	fi

	cargo fmt -- --check

	if [ "$$(head -n 1 ./src/lib.rs)" != "#![no_std]" ]; then \
		echo "'#![no_std]' must be at the top of lib.rs"; \
		exit 1; \
	fi \

lint: lint_no_clippy
	cargo clippy
	@if [ "$$(cargo clippy 2>&1 | grep -v Finished | grep -v Checking | grep -v Blocking)" ]; \
		then echo "ERROR: `cargo clippy` found some issues (see above)"; exit 1; \
	fi

lint_no_clippy:
	cargo fmt -- --check

	@if [ -f ./src/lib.rs ]; then \
		if [ "$$(head -n 1 ./src/lib.rs)" != "#![forbid(unsafe_code)]" ]; then \
			echo "'#![forbid(unsafe_code)]' must be at the top of lib.rs"; \
			exit 1; \
		fi \
	fi

	@if [ -f ./src/main.rs ]; then \
		if [ "$$(head -n 1 ./src/main.rs)" != "#![forbid(unsafe_code)]" ]; then \
			echo "'#![forbid(unsafe_code)]' must be at the top of main.rs"; \
			exit 1; \
		fi \
	fi

test:
	cargo test
	cargo test --release

test_miri:
	# cargo +nightly-2022-12-08 miri test

test_no_parallel:
	cargo test -j 1
	cargo test -j 1 --release

allowlist:
	@if [ ! -f ./.allowlist ]; then \
		echo "missing .allowlist"; \
		exit 1; \
	fi

ok:
	@echo 'OK!'

submit:
	cargo run --manifest-path ../tools/submit/Cargo.toml -- --task-path .
	@echo 'OK!'
